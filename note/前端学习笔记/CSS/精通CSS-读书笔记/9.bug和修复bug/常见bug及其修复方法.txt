


		在<=IE6的浏览器版本上的bug



		・在IE6中，如果一个文本段落靠着一个浮动元素，如果段落拥有布局（比如说设置了高度），那么它就被限制为矩形，因此阻止文本围绕浮动元素。
		而其他浏览器则会正常围绕。

		・在IE6中，如果元素的内容变得比元素本身大，那么拥有布局的元素会错误地扩展以适应内容的尺寸。
		而其他的浏览器则会保证元素大小，使内容溢出元素框外。



		1.双外边距浮动bug

			任何浮动元素的外边距都会变为双倍

		解决办法：将浮动元素的display设置为inline。




		2.3像素文本偏移bug

			比如将一个元素向左浮动，并且不希望相邻段落中的文本围绕浮动元素，所以在段落上应用一个坐外边距，其大小等于浮动元素的宽度。如果这么做，在文本和浮动元素之间就会出现一个莫名其妙的3像素间隙。

		解决办法：给包含文本的元素设置任意的高度，迫使元素拥有布局。因为IE6及以下版本会将height看作min-height，所以设置一个小高度不会影响元素实际尺寸，但这会影响其他的浏览器。所以我们要使用条件注释将这个样式转移到单独的css文件中。

		其他浏览器：
			img.myFloat {
				width: 200px;
				float: left;
			}
			p {
				margin-left: 200px;
			}

		IE6：
			p {
				height: 1%;
				margin-left: 0;
			}
			img.myFloat {
				margin: 0;  
				//IE6及以下被限制为矩形且不浮动，所以不需要设置margin-left
			}

		IE5.x：
			p {
				height: 1%;
				margin-left: 0;
			}
			img.myFloat {
				margin: 0 -3px;
				//IE5中解决p后，img会向左偏移3px
			}



		3.重复字符bug

			在某些情况下，一系列浮动元素的最后几个字符会在浮动元素下面重复出现。

		解决办法：从html代码中删除注释。



		4.“藏猫猫”bug

			一个浮动元素后面跟着一些非浮动元素，然后是一个清理元素，所有这些元素都包含在一个设置了背景颜色或图像的父元素中，如果清理元素碰到了浮动元素，那么中间的非浮动元素看起来消失了，隐藏到了父元素背景后面，只有再刷新页面才重新出现。

		解决办法：
			1.避免清理元素与浮动元素接触，给容器元素特定的尺寸
			2.给容器指定行高
			3.将浮动元素和容器元素的position设置为relative


		5.相对容器中的绝对定位

			父相子绝没起作用，子元素仍相对于视口定位。
			因为相对定位的元素没有获得IE/Win的内部hasLayout属性。因此它们不创建新的定位上下文，因此所有绝对定位元素相对于视口进行定位。	

		解决办法：使用条件注释，给父容器设置width和height（迫使相对定位的父容器拥有布局。）
			.container {
				height: 1%;
			}